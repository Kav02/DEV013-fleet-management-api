{
  "openapi": "3.0.1",
  "info": {
    "title": "Fleet Management API",
    "description": "API for managing taxi fleet",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "tags": [
    {
      "name": "Taxi",
      "description": "Get list of taxis"
    },
    {
      "name": "Location",
      "description": "Get location by taxi and date"
    }
  ],
  "paths": {
    "/taxi": {
      "get": {
        "tags": [
          "Taxi"
        ],
        "summary": "Get list of taxis",
        "description": "Returns a list of all taxis",
        "parameters": [
          {
            "in": "query",
            "name": "plate",
            "description": "The plate of the taxi",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "Requested page",
            "default": 1,
            "required": false,
            "schema": {
              "type": "number",
              "format": "integer"
            }
          },
          {
            "in": "query",
            "name": "items_per_page",
            "description": "Quantity of items per page",
            "default": 10,
            "required": false,
            "schema": {
              "type": "number",
              "format": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Taxi"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/location": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get list of locations",
        "description": "Returns a list of locations by taxi and date",
        "parameters": [
          {
            "in": "query",
            "name": "taxi_id",
            "description": "The ID of the taxi",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "date",
            "description": "The date for filtering locations",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500":{
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
  "/location/latest": {
      "get": {
        "tags": [
          "Latest Location"
        ],
        "summary": "Get list of the latest locations of the taxis",
        "description": "Returns a list of the latest locations by taxi",
        "parameters": [
        {
            "in": "query",
            "name": "page",
            "description": "Requested page",
            "default": 1,
            "required": false,
            "schema": {
              "type": "number",
              "format": "integer"
            }
          },
          {
            "in": "query",
            "name": "items_per_page",
            "description": "Quantity of items per page",
            "default": 10,
            "required": false,
            "schema": {
              "type": "number",
              "format": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location/latest"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses"
          }
        }
      }
    }
    },
  "components": {
    "schemas": {
      "Taxi": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "plate": {
            "type": "string"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "taxi_id": {
            "type": "integer"
          },
          "date":{
            "type": "string",
            "format": "date-time"
          },
          "latitude":{
              "type": "number",
              "format": "double"
            },
          "longitude":{
              "type": "number",
              "format": "double"
            }
        }
      },
      "Location/Latests": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "plate": {
            "type": "string"
          },
          "date":{
            "type": "string",
            "format": "date-time"
          },
          "latitude":{
              "type": "number",
              "format": "double"
            },
          "longitude":{
              "type": "number",
              "format": "double"
            }
    }
      }
    },
    "responses": {
    "NotFound": {
      "description": "(Not found) Information not found"
    },
    "BadRequest": {
      "description": "(Bad Request)The request is not valid"
    },
    "ServerError": {
      "description": "(Server Error) No response from server"
    }

    }
  }
}
